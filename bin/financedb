#!/bin/bash
# financedb

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -e  "${PWD}/var/finance.sqlite3" ]
    then
        echo "DB already exists"
    else
        sqlite3 var/finance.sqlite3 < sql/schema.sql
        sqlite3 var/finance.sqlite3 < sql/data.sql
    fi
    ;;

  "destroy")
    rm -rf var/finance.sqlite3
    ;;

  "reset")
    rm -rf var/finance.sqlite3
    sqlite3 var/finance.sqlite3 < sql/schema.sql
    sqlite3 var/finance.sqlite3 < sql/data.sql
    ;;

  "dump")
    echo -e "\033[4;35mTRANSACTIONS\033[0m"
    sqlite3 -batch -line var/finance.sqlite3 'SELECT * FROM transactions'
    echo
    echo -e "\033[4;35mPAYMENTS\033[0m"
    sqlite3 -batch -line var/finance.sqlite3 'SELECT * FROM payments'
    echo
    echo -e "\033[4;35mPURCHASE TYPES\033[0m"
    sqlite3 -batch -line var/finance.sqlite3 'SELECT * FROM purchase_types'
    echo
    echo -e "\033[4;35mCOMPANIES\033[0m"
    sqlite3 -batch -line var/finance.sqlite3 'SELECT * FROM companies'
    ;;
  *)
    usage
    exit 1
    ;;
esac
